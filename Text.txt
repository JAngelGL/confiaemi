using NXOpen;
using System;

class Program
{
    public static void Main(string[] args)
    {
        try
        {
            ExecuteSession();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

    public static void ExecuteSession()
    {
        Session theSession = Session.GetSession();
        Part workPart = theSession.Parts.Work;

        if (workPart != null)
        {
            string sketchName = "Rect√°ngulo";
            Point3d sketchOrigin = new Point3d(0.0, 0.0, 0.0);
            Vector3d sketchXDirection = new Vector3d(1.0, 0.0, 0.0);
            Vector3d sketchYDirection = new Vector3d(0.0, 1.0, 0.0);

            if (Vector3d.ArePerpendicular(sketchXDirection, sketchYDirection))
            {
                Plane sketchPlane = workPart.Planes.CreatePlane(sketchOrigin, sketchXDirection, sketchYDirection, SmartObject.UpdateOption.WithinModeling);
                Sketch sketch = workPart.Sketches.CreateSketch(sketchName, sketchPlane, true);

                sketch.OpenSketch();
                
                Point3d point1 = new Point3d(0.0, 0.0, 0.0);
                Point3d point2 = new Point3d(100.0, 0.0, 0.0);
                Point3d point3 = new Point3d(100.0, 50.0, 0.0);
                Point3d point4 = new Point3d(0.0, 50.0, 0.0);

                workPart.Curves.CreateLine(point1, point2);
                workPart.Curves.CreateLine(point2, point3);
                workPart.Curves.CreateLine(point3, point4);
                workPart.Curves.CreateLine(point4, point1);

                sketch.CloseSketch();
            }
            else
            {
                Console.WriteLine("Los vectores no son ortogonales.");
            }
        }
        else
        {
            Console.WriteLine("No hay una parte de trabajo activa.");
        }
    }

    public static int GetUnloadOption(string arg)
    {
        return (int)Session.LibraryUnloadOption.Immediately;
    }
}
